<!DOCTYPE html>
<html>
<head>
</head>
<body>
<div>
<ul class="dropdown" data-jkit="[menu]">
<li><a href="#!Статьи.Windows_Server_Services.PowerShell.Аудит_сервера_печати">Аудит сервера печати</a>
<ul class="sub_menu">
<li><a href="#!Статьи.Windows_Server_Services.PowerShell.Printscreen">Printscreen</a></li>
</ul>
</li>
</ul>
</div>
<p>&nbsp;</p>
<p style="text-align: justify;">&nbsp;<br /><span style="text-align: justify;">&nbsp;Для аудита сервера печати можно использовать разные средства, как платные и бесплатные. Бесплатных, удовлетворяющих моим требованиям, я так и не нашёл. Мои требование просты: кто, когда, сколько и на каком принтере. Лишнего мне не надо. Но в любом случае, дополнительное программное обеспечение необходимо устанавливать на сервере, а в некоторых случаях и агенты на клиентские компьютеры. Как следствие - дополнительные процессы, и нагрузка. Именно по этому, я решил найти вариант штатными средствами.</span></p>
<p style="text-align: justify;">&nbsp;Я никак не рашелся серьёзно занятся этим делом пока однажды на одном торренте (не скажу в каком разделе) был скачен журнал "Системный администратор. Июнь. 2012". Там и была статья посвящённая аудиту печати на Windows Server 2008 <strong>R2</strong>. Однако при выполнении начальных действий по статье не привели к результату. Я специально выделил <strong>R2</strong>. Т.к. в этой ОС логи печати включаются не так как описано в статье и собираются не в журнале SYSTEM. Однако, возможно автор писал статью с сервера без SP1. Т.к. у меня нет под рукой 2008 или 2008 R2 без SP1 - проверить не смогу. Но, спасибо автору - направление указал. Кому интересна статья вот <a href="http://fs.exonix.ru/print/print.pdf" target="_blank" rel="noopener noreferrer">ссылка</a>.</p>
<p style="text-align: justify;"><span>&nbsp;Уже изначально я решил что буду записывать логи в базу даных, а потом красиво показывать через веб-интерфейс. У меня есть виртуальные машины на Debian (Cacti, Nagios) по этому ещё одна малюсенькая база данных там не помешает. Для записи из PowerShell в MySQL нам понадобится коннектор&nbsp;</span><a href="http://dev.mysql.com/downloads/connector/net/">MySQL Connector Net</a><span>.&nbsp;Но позже, я попробую реализовать тоже самое для MS SQL Express.&nbsp;</span>Начнём по порядку. По умолчанию логи печати отключены. Для того, чтобы их включить необходимо раскрыть "Просмотр Журналов":</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="http://fs.exonix.ru/print/print1.png" /></p>
<p style="text-align: justify;">&nbsp;В свойствах журнала Operational включается логирование почты. На рисунке у меня уже включено логирование. Так как данные будут записываться в базу данных mysql, то дополнительной настройки для журнала не потребуется. Но если вам нужно, в свойствах вы можете указать размер журнала, действия в случае достижения максимального размера. Так же, возможно, потребуется настройка принтера. Но для перед этим нужно несколько раз распечатать документ с количеством копий больше чем одна. Если в событии 805 при количестве копий больше чем одина, всё равно будет "1", то необходимо обновить драйвера принтера, а, если не поможет, отключить рендеринг на стороне клиента. К сожалению, для некоторых приложений может не помочь. У меня количество копий не работало для Word 2010, но при этом работало для Excel 2010 из тогоже дистрибутива.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" alt="" src="http://fs.exonix.ru/print/print10.png" height="593" width="467" /></p>
<p style="text-align: justify;">&nbsp;Для статистики нам нужно событие с номером 307 и событие 805. Про 805 я узнал спустя почти год после написания данной статьи. Узнал случайно, когда на форуме Oszone спросили про аудит печати скриптом с MSDN. <span>Оказалось, что параметр&nbsp;</span><em>$Pages = $event.Event.UserData.DocumentPrinted.Param8&nbsp;</em><span>содержит количество страниц только&nbsp;</span><span>для одной копии. А количество копий как раз можно узнать из лога 805.</span>&nbsp;Логи из журнала обрабатываются с помощью PowerShell v3. С журнале СА рекомендуется использовать команду:&nbsp;get-eventlog. Однако, она умеет анализировать только Windows Logs и не работает напрямую с ID лога:</p>
<pre style="text-align: justify;">PS C:\Users\admin&gt; Get-EventLog -List
  Max(K) Retain OverflowAction        Entries Log
  ------ ------ --------------        ------- ---
     512      7 OverwriteOlder            334 Active Directory Web Services
  20&nbsp;480      0 OverwriteAsNeeded      16&nbsp;831 Application
  15&nbsp;168      0 OverwriteAsNeeded       1&nbsp;075 DFS Replication
     512      0 OverwriteAsNeeded       2&nbsp;621 Directory Service
  16&nbsp;384      0 OverwriteAsNeeded         513 DNS Server
   8&nbsp;192      0 OverwriteAsNeeded           0 Doctor Web
  20&nbsp;480      0 OverwriteAsNeeded           0 HardwareEvents
     512      7 OverwriteOlder              0 Internet Explorer
  20&nbsp;480      0 OverwriteAsNeeded           0 Key Management Service
                                              Security
  20&nbsp;480      0 OverwriteAsNeeded      54&nbsp;581 System
  15&nbsp;360      0 OverwriteAsNeeded           9 Windows PowerShell

</pre>
<p style="text-align: justify;">&nbsp;Для анализа других логов используется Get-WinEvent, который имеет ключ -ComputerName для подключения к удалённому компьютеру. Но я буду собирать логи с локального компьютера. Для начала назначим права для пользователя, который будет подключаться с сервера печати с IP адресом&nbsp;<span>XXX.XXX.XXX.XXX. Пароль не должен содержать знак <span style="color: #ff0000;"><strong>$</strong></span>. Выполнить на сервере MySQL:</span></p>
<pre>mysql -h localhost -u root -p<br /><strong>Enter password:</strong><br /><br />mysql&gt; CREATE USER 'root'@'<span style="color: #ff0000;">XXX.XXX.XXX.XXX</span>' IDENTIFIED BY 'asdASD';<br />Query OK, 0 rows affected (0.00 sec)<br /><br />mysql&gt; GRANT ALL PRIVILEGES ON *.* TO 'root'@'<span style="color: #ff0000;">XXX.XXX.XXX.XXX</span>' WITH GRANT OPTION;<br />Query OK, 0 rows affected (0.00 sec)</pre>
<p style="text-align: justify;">&nbsp;Разрешаем выполнение скриптов PS1 на сервере печати:</p>
<pre style="text-align: justify;"><em><span style="font-family: Verdana, 'BitStream vera Sans', Helvetica, sans-serif; line-height: 17px;">Set-ExecutionPolicy&nbsp;</span><span style="font-family: Verdana, 'BitStream vera Sans', Helvetica, sans-serif; line-height: 17px; text-align: left;">RemoteSigned</span></em><span style="font-family: Verdana, 'BitStream vera Sans', Helvetica, sans-serif; line-height: 17px; text-align: left;"><br /></span></pre>
<p style="text-align: justify;">&nbsp;После этого создаём базу данных из <strong>PowerShell</strong>, где <strong>yyy.yyy.yyy.yyy</strong> IP адрес mysql сервера:</p>
<pre style="text-align: justify;">Add-Type -Path "C:\Program Files (x86)\MySQL\MySQL Connector Net <strong>6.9.9</strong>\Assemblies\v4.5\MySql.Data.dll" <br />$connectionString = "server=<span style="color: #ff0000;"><strong>yyy.yyy.yyy.yyy</strong></span>;uid=root;pwd=asdASD;" <br />$connection = New-Object MySql.Data.MySqlClient.MySqlConnection <br />$connection.ConnectionString = $connectionString <br />$connection.Open() <br />$sql = New-Object MySql.Data.MySqlClient.MySqlCommand <br />$sql.Connection = $connection<br />$sql.CommandText = "CREATE DATABASE PRINT CHARACTER SET utf8 COLLATE utf8_general_ci;"<br />$sql.ExecuteNonQuery()<br />$sql.CommandText = "CREATE TABLE PRINT.LOGS (<br />`id` INT(11) NOT NULL,<br />`Day` DATE NOT NULL,<br />`Time` TIME NOT NULL,<br />`User` VARCHAR(30) NOT NULL,<br />`Printer` VARCHAR(21) NOT NULL,<br />`Port` VARCHAR(15) NOT NULL,<br />`Document` VARCHAR(255) NOT NULL,<br />`Pages` INT NOT NULL,<br />`Copy` INT NOT NULL,<br />`Size` INT NOT NULL);"<br />$sql.ExecuteNonQuery()<br />$sql.CommandText = "SHOW COLUMNS FROM LOGS FROM PRINT;"<br />$Table=New-Object Data.DataTable<br />$Table.Load($sql.ExecuteReader())<br />$Table | ft<br />$connection.Close()</pre>
<p style="text-align: justify;">&nbsp;Вывод:</p>
<pre style="text-align: left;">PS C:\&gt; C:\scripts\mysql1.ps1
1
0

Field	 Type           Null Key Default Extra                            
-----    ----           ---- --- ------- -----                            
id       int(11)        NO
Day      datetime       NO
Time     datetime       NO
User     varchar(30)    NO
Printer  varchar(20)    NO
Port     varchar(15)    NO
Document varchar(255)	NO
Pages    int(11)        NO
Copy     int(11)        NO
Size	 int(11)        NO</pre>
<p style="text-align: justify;">&nbsp;Далее, я приведу готовый скрипт для анализа логов и разберу его части.&nbsp;<span>9,458 заданий с 4-х принтеров за год были обработаны им за 7 минут на сервере c Intel E31230 3,2 GHz.</span></p>
<pre style="text-align: left;"><em>Add-Type -Path "C:\Program Files (x86)\MySQL\<span>MySQL Connector Net </span><strong>6.9.9</strong><span>\Assemblies\v4.5\MySql.Data.dll</span>" </em><br /><em>$connectionString = "server=doc;uid=root;pwd=asdasd;database=allprint;" </em><br /><em>$connection = New-Object MySql.Data.MySqlClient.MySqlConnection </em><br /><em>$connection.ConnectionString = $connectionString </em><br /><em>$connection.Open() </em><br /><em>$sql = New-Object MySql.Data.MySqlClient.MySqlCommand </em><br /><em>$sql.Connection = $connection </em><br /><em>&nbsp; &nbsp;$today = get-date -DisplayHint date -UFormat %Y-%m-%d </em><br /><em>&nbsp; &nbsp;Get-WinEvent -FilterHashTable @{LogName="Microsoft-Windows-PrintService/Operational";starttime="$today";id=307} | Foreach { </em><br /><em>&nbsp; &nbsp;$event = [xml]$_.ToXml() </em><br /><em>&nbsp; &nbsp; &nbsp; if($event) </em><br /><em>&nbsp; &nbsp; &nbsp; { </em><br /><em>&nbsp; &nbsp; &nbsp; $Time = Get-Date $_.TimeCreated -UFormat "%Y-%m-%d %H:%M:%S" </em><br /><em> <em>&nbsp; &nbsp; &nbsp;&nbsp;</em>$Job = $event.Event.UserData.DocumentPrinted.Param1 </em><br /><em> <em>&nbsp; &nbsp; &nbsp;&nbsp;</em>$Document = $event.Event.UserData.DocumentPrinted.Param2.ToString().Replace("\","\\") </em><br /><em> <em>&nbsp; &nbsp; &nbsp;&nbsp;</em>$User = $event.Event.UserData.DocumentPrinted.Param3 </em><br /><em> <em>&nbsp; &nbsp; &nbsp;&nbsp;</em>$Port = $event.Event.UserData.DocumentPrinted.Param6 </em><br /><em> <em>&nbsp; &nbsp; &nbsp;&nbsp;</em>$Printer = $event.Event.UserData.DocumentPrinted.Param5 </em><br /><em> <em>&nbsp; &nbsp; &nbsp;&nbsp;</em>$Size = $event.Event.UserData.DocumentPrinted.Param7 </em><br /><em> <em>&nbsp; &nbsp; &nbsp;&nbsp;</em>$Pages = $event.Event.UserData.DocumentPrinted.Param8 </em><br /><em> <em>&nbsp; &nbsp; &nbsp;&nbsp;</em>$sql.CommandText = "INSERT INTO alllog (User,Printer,Port,Time,Document,Pages,Size,Job) VALUES ('$User','$Printer','$Port','$Time','$Document','$Pages','$Size','$Job')" </em><br /><em>&nbsp; &nbsp;$sql.ExecuteNonQuery() </em><br /><em>&nbsp; &nbsp;} </em><br /><em>} </em><br /><em>&nbsp; &nbsp;Get-WinEvent -FilterHashTable @{LogName="Microsoft-Windows-PrintService/Operational";starttime="$today";id=805} | Foreach { </em><br /><em>&nbsp; &nbsp;$event = [xml]$_.ToXml() </em><br /><em> <em>&nbsp; &nbsp; &nbsp;&nbsp;</em>if($event) </em><br /><em> <em>&nbsp; &nbsp; &nbsp;&nbsp;</em>{ </em><br /><em> <em>&nbsp; &nbsp; &nbsp;&nbsp;</em>$Time = Get-Date $_.TimeCreated -UFormat "%Y-%m-%d %H:%M:%S" </em><br /><em> <em>&nbsp; &nbsp; &nbsp;&nbsp;</em>$Copy = $event.Event.UserData.RenderJobDiag.Copies </em><br /><em> <em>&nbsp; &nbsp; &nbsp;&nbsp;</em>$sql.CommandText = "UPDATE alllog set Copy=$Copy WHERE Time='$Time'" </em><br /><em> <em>&nbsp; &nbsp;</em>$sql.ExecuteNonQuery() </em><br /><em> <em>&nbsp; &nbsp;</em>} </em><br /><em>} </em><br /><em>$connection.Close()</em>&nbsp;</pre>
<p style="text-align: left;"></p>
<p style="text-align: justify;">&nbsp;<strong>А</strong> теперь разбор скрипта. Некоторые поля я не смогу объяснить...<br /> <em>Add-Type -Path</em> &nbsp; добавляет путь к библиотеке коннектора к MySQL. Необходим при старте каждой сессии. Путь зависит от версии коннетора. Будьте внимательны.<br /> <em>$connectionString =</em> &nbsp; здесь определяем имя сервера с MySQL, пользователя и его пароль для подключения к базе. Базу тут же указываем.<br /> <em>$connection =&nbsp;<br /> $connection.ConnectionString =</em> &nbsp; вот эти две строчки я не знаю для чего :)<br /> <em>$connection.Open()</em> &nbsp; наверное открывает сессию...<br /> <em>$sql = New-Object MySql.Data.MySqlClient.MySqlCommand<br /> $sql.Connection = $connection </em>&nbsp; вот эти две строчки я не знаю для чего :)<br /> <em>$today = get-date -DisplayHint date -UFormat %d.%m.%y</em> &nbsp; присваиваем переменной $today значение текущего дня. Другие даты нас не будут интересовать,так как скрипт запускается каждую ночь и прошлые данные уже в базе.<br /> <em>Get-WinEvent</em>&nbsp; команда анализирует логи расположенные по определённому пути, начиная со времени текущего дня (если вам нужно загрузить все логи, то starttime="$today"; можно убрать), только логи с ID 307 или ID 805 и передаёт вывод команде Foreach, которая будет работать циклически.<br /> <em>$Time, $Job, $Document</em> - это та информация, которая нам нужна. Вы можете назвать эти переменные своими именами.<br /> <em>$event.Event.UserData.DocumentPrinted.Param6</em> &nbsp; эти все строчки опишет одна картинка:</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="http://fs.exonix.ru/print/print2.png" /></p>
<p style="text-align: justify;">&nbsp;</p>
<p style="text-align: left;"><em>$_.TimeCreated</em>&nbsp;&nbsp; &nbsp;найдёте, если раскроете +System<br /><em>$Time = Get-Date $_.TimeCreated -UFormat "%Y-%m-%d %H:%M:%S"</em>&nbsp;меняем формат выводимого времени потому, что mysql не воспринимает формат выводимый&nbsp;<em>$_.TimeCreated. </em>Только если таблица имеет тип varchar. Но это не удобно при работе с php. К счастью, get-date работает не только с системным временем.<br /> <em>$sql.CommandText =</em> &nbsp; выполнение команды MySQL<br /> <em>"INSERT INTO alllog (User,Printer,Port,Time,Document,Pages,Size,Job) VALUES ('$User','$Printer','$Port','$Time','$Document','$Pages','$Size','$Job')" </em>&nbsp; &nbsp;команда для ввода (но не сам ввод) в таблицу alllog соотвествующих данных.<br /><em>"UPDATE alllog set Copy=$Copy WHERE Time='$Time'" </em>&nbsp; команда для обновления базы. Записывает значение Copy (количество копий) в поле, у которого имеющееся время Time совпадает со временем из события 805 $Time. Вначале, я хотел делать соответствие с полем Job, но оказалось, что Job сбрасывается в ноль, после достижения значения 255. В этом случае, UPDATE перезаписал бы все значения, чьи задания имели одинаковое значение.<br /><em>$sql.ExecuteNonQuery() </em>&nbsp; выполняет предыдущую команду, т.е. вводит информацию в базу.<br /><em>$connection.Close()</em> &nbsp; закрывает сессию.</p>
<p style="text-align: justify;">Далее простой скрипт на php. Позже будет более красивый. Этот просто выводит суммарную информацию:</p>
<p style="text-align: justify;">&nbsp;</p>
<pre style="text-align: justify;"><em>&lt;?php<br /></em>// Подключаемся к серверу MySQL<br /><em>$hostname = '192.168.10.17';<br /></em><em>$username = 'root';<br /></em><em>$password = 'asdasd';<br /></em><em><br />$db = mysql_connect($hostname, $username, $password)<br /></em><em>&nbsp; &nbsp; or die('connect to database failed');<br /></em>&nbsp;<br />// Назначаем кодировку базы<br /><em>mysql_set_charset('utf8');<br /></em>&nbsp;<br />// выбираем базу<br /><em>mysql_select_db('allprint')<br /></em><em>&nbsp; &nbsp; or die('db not found');<br /></em><br />// Запрашиваем нужную информацию и результат назначаем переменной $result<br /><strong><em>$query = 'SELECT User,Printer,SUM(Pages) FROM `alllog` GROUP BY User,Printer';<br /></em></strong><em>$result = mysql_query($query) or die(mysql_error() ."&lt;br/&gt;". $query);<br /></em><br />// Строим таблицу (информация только по пользователям, принтерам, количеству страниц)<br />&nbsp; &nbsp; &nbsp; <em>&nbsp; $table = "&lt;table border=0 width=25% align=center&gt;\n";<br /></em><em>&nbsp; &nbsp; &nbsp; &nbsp; while ($row = mysql_fetch_assoc($result))<br /></em><em>{<br /></em><em>&nbsp; &nbsp; &nbsp; &nbsp; $table .= "&lt;tr&gt;\n";<br /></em><em>&nbsp; &nbsp; &nbsp; &nbsp; $table .= "&lt;td&gt;".$row['User']."&lt;/td&gt;\n";<br /></em><em>&nbsp; &nbsp; &nbsp; &nbsp; $table .= "&lt;td&gt;".$row['Printer']."&lt;/td&gt;\n";<br /></em><em>&nbsp; &nbsp; &nbsp; &nbsp; $table .= "&lt;td&gt;".$row['SUM(Pages)']."&lt;/td&gt;\n";<br /></em><em>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;$table .= "&lt;/tr&gt;\n";<br /></em><em>&nbsp; &nbsp; &nbsp; &nbsp; }<br /></em><em>$table .= "&lt;/table&gt;\n";<br /></em><em>echo $table;<br /></em><em>mysql_close($db);<br /></em><em>?&gt;</em></pre>
<p style="text-align: justify;"><strong>&nbsp;Жирным</strong> я выделил строчку, которая и определяет выборку содержимого. Вся соль в ней, так как код таблицы можно легко найти в интернете. В приведённом коде выборка идёт за все периоды. А вот строчка, которая показывает за вчерашний день (т.к. за сегодняшний данные загрузятся ночью):</p>
<pre style="text-align: justify;"><em>$query = 'SELECT User,Printer,SUM(Pages) FROM `alllog` WHERE Time LIKE "'.date('m', strtotime("now -1 day")).'/'.date('d', strtotime("now -1 day")).'/'.date('Y', strtotime("now -1 day")).<strong>'%" </strong>GROUP BY User,Printer';</em></pre>
<p style="text-align: justify;">&nbsp;Если убрать значения&nbsp;<em><strong>strtotime("now -1 day") , </strong></em>то получим данные за сегодняшний день.&nbsp;Всё готово. Помещаем этот скрипт на ваш веб-сервер и получаем простую информацию в вашем браузере о том кто, какой принтер и сколько. Скоро будет - когда :) всё-таки я не программист php.</p>
<div style="text-align: justify;">&nbsp;</div>
<div style="text-align: justify;">&nbsp;Благодарю <a href="http://social.technet.microsoft.com/profile/kazun/?ws=usercard-mini" target="_blank" rel="noopener noreferrer">Kazun</a>&nbsp;и <a href="http://phpforum.ru/index.php?showuser=4190" target="_blank" rel="noopener noreferrer">Sergeiis</a>&nbsp;за помощь со скритпами PowerShell и PHP.<br />&nbsp;Так же благодарю&nbsp;<a href="http://www.sql.ru/forum/memberinfo.aspx?mid=21430" target="_blank" rel="noopener noreferrer">miksoft</a> за помощь с UPDATE - всё гениальное просто!</div>
<div style="text-align: justify;"></div>
<div style="text-align: justify;">&nbsp;Обнаружен <span style="color: #ff0000;"><strong>баг</strong></span> при печати из некоторых приложений с ОС 2008 R2, и увы, с ОС 2012 R2. При печати из Word 2010\2013, IE 11 - в событии 805 не регистрируются количество копий. Всегда указана одна копия. Так же, начиная с Server 2012 поле "Имя документа" скрыто, т.е. всегда вместо названия документа пишется Document №х, где х - порядковый номер задачи печати. Тесты проводились с универсальными драйверами для Windows Server 2012 R2.</div>
<div style="text-align: justify;">&nbsp;Обнаружен <span style="color: #ff0000;"><strong>баг</strong></span> при печати из <span style="color: #ff0000;"><strong>OS X</strong></span> - количество страниц всегда 0........</div>
<p style="text-align: justify;">&nbsp;</p>
<p style="text-align: right;"><em>Первая редакция (без ID 805) - Июль 2012</em></p>
<p style="text-align: right;"><em>Вторая редакция (c ID 805) - Июнь &nbsp;2013</em></p>
<p style="text-align: justify;"></p>
<div id="vk_comments"></div>
</body>
</html>